1. ps 이용하여 확인
  - # ps -eo size,pid,user,command --sort -size | \
    awk '{ hr=$1/1024 ; printf("%13.2f Mb ",hr) } { for ( x=4 ; x<=NF ; x++ ) { printf("%s ",$x) } print "" }' |\
    cut -d "" -f2 | cut -d "-" -f1
  - 참조 : https://stackoverflow.com/questions/131303/how-can-i-measure-the-actual-memory-usage-of-an-application-or-process
  
2. ps_mem 이용하여 확인
  - # yum install ps_mem
  - # ps_mem
  - 참조 : https://stackoverflow.com/questions/131303/how-can-i-measure-the-actual-memory-usage-of-an-application-or-process
  
3. pmap 이용하여 확인
  - # pmap [pid]
  - https://shaeod.tistory.com/705
  - https://linuxhint.com/check_memory_usage_process_linux/
  
4. pmap 활용한 스크립트 작성
  - # vi test.sh
  #!/bin/bash
printf "%-10s%-15s%-15s%s\n" "PID" "OWNER" "MEMORY" "COMMAND"

function sysmon_main() {
  RAWIN=$(ps -o pid,user,%mem,command ax | grep -v PID | awk '/[0-9]*/{print $1 ":" $2 ":" $4}')

  for i in $RAWIN
  do
    PID=$(echo $i | cut -d: -f 1)
    OWNER=$(echo $i | cut -d: -f 2)
    COMMAND=$(echo $i | cut -d: -f 3)
    MEMORY=$(pmap $PID | tail -n 1 | awk '/[0-9]K/{print $2}')

    printf "%-10s%-15s%-15s%s\n" "$PID" "$OWNER" "$MEMORY" "$COMMAND"
  done
}

sysmon_main | sort -bnr -k3

  - 참조 : https://linuxhint.com/check_memory_usage_process_linux/
